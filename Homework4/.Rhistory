install.packages(c("candisc", "CCA"))
#Instalar las librerias necesarias y cargarlas
instalar <- function(paquete) {
if (!require(paquete,character.only = TRUE,
quietly = TRUE,
warn.conflicts = FALSE)){
install.packages(as.character(paquete),
dependecies = TRUE,
repos = "http://cran.us.r-project.org")
library(paquete,
character.only = TRUE,
quietly = TRUE,
warn.conflicts = FALSE)
}
}
libs <- c('HistData')
lapply(libs, instalar)
library("ccaPP")
set.seed(20200420) #created at date
# assigning number of excercises
(people_3quest <- sample(x = c("Roman","Pablo","Sof"),replace = F, size = 2)) #people with 3 questions, by alphabetic order
# assinging excersises
number_ex <- 1:10 #excercises
cat("\nEjercicios Roman: ")
(ex_luis <- sample(x = number_ex, replace = F, size = 4))
number_ex <- number_ex[! number_ex %in% ex_luis] #removing questions
cat("\nEjercicios Pablo: ")
(ex_roman <- sample(x = number_ex, replace = F, size = 3))
number_ex <- number_ex[! number_ex %in% ex_roman] #removing questions
cat("\nEjercicios Sof: ")
(ex_sof <- number_ex)
#Instalar las librerias necesarias y cargarlas
instalar <- function(paquete) {
if (!require(paquete,character.only = TRUE,
quietly = TRUE,
warn.conflicts = FALSE)){
install.packages(as.character(paquete),
dependecies = TRUE,
repos = "http://cran.us.r-project.org")
library(paquete,
character.only = TRUE,
quietly = TRUE,
warn.conflicts = FALSE)
}
}
libs <- c('ccap')
lapply(libs, instalar)
#Instalar las librerias necesarias y cargarlas
instalar <- function(paquete) {
if (!require(paquete,character.only = TRUE,
quietly = TRUE,
warn.conflicts = FALSE)){
install.packages(as.character(paquete),
dependecies = TRUE,
repos = "http://cran.us.r-project.org")
library(paquete,
character.only = TRUE,
quietly = TRUE,
warn.conflicts = FALSE)
}
}
libs <- c('ccaPP')
lapply(libs, instalar)
data("diabetes")
x <- diabetes$x
y <- diabetes$y
View(diabetes)
data.3<-data("diabetes")
x <- diabetes$x
y <- diabetes$y
data("diabetes")
head("diabetes")
x <- diabetes$x
y <- diabetes$y
View(x)
data("diabetes")
x <- diabetes$x
y <- diabetes$y
(spearman <- maxCorGrid(x, y))
data("diabetes")
x <- diabetes$x
y <- diabetes$y
(spearman.3 <- maxCorGrid(x, y))
spearman.3$a
spearman.3$b
View(diabetes)
data.3<-read.table("diabetes.txt",header=T)
View(data.3)
View(data.3)
data.3<-read.table("diabetes.txt",header=T)
x <- data.3[,4:6]
y <- data.3[,2:3]
View(x)
View(y)
data.3<-read.table("diabetes.txt",header=T)
(correacion <- cor(salarios))
data.3<-read.table("diabetes.txt",header=T)
(correlacion <- cor(data.3))
x <- data.3[,4:6]
y <- data.3[,2:3]
data.3<-read.table("diabetes.txt",header=T)
(covarianza <- cov(data.3))
x <- data.3[,4:6]
y <- data.3[,2:3]
data.3<-read.table("diabetes.txt",header=T)
(covarianza <- cov(data.3))
x.3 <- data.3[,4:6]
y.3 <- data.3[,2:3]
(cca <- stats::cancor(x, y))
cov.3<-matrix(c(1106.0, 396.7 108.4, .787, 26.230),c(396.7, 2382.0, 1143.0, -.214, -23.96))
cov.3<-matrix(c(1106.0, 396.7, 108.4, .787, 26.230),c(396.7, 2382.0, 1143.0, -.214, -23.96))
cov.3<-cbind(c(1106.0, 396.7, 108.4, .787, 26.230),c(396.7, 2382.0, 1143.0, -.214, -23.96))
View(cov.3)
cov.3<-cbind(c(1106.0, 396.7, 108.4, .787, 26.230),c(396.7, 2382.0, 1143.0, -.214, -23.96), c(.787, .-214, 2.189, .016, .216), c(26.23, -23.960, -20.84, .216, 70.56))
cov.3<-cbind(c(1106.0, 396.7, 108.4, .787, 26.230),c(396.7, 2382.0, 1143.0, -.214, -23.96), c(.787, -.214, 2.189, .016, .216), c(26.23, -23.960, -20.84, .216, 70.56))
View(cov.3)
R.3<-cbind(c(1106.0, 396.7, 108.4, .787, 26.230),c(396.7, 2382.0, 1143.0, -.214, -23.96), c(.787, -.214, 2.189, .016, .216), c(26.23, -23.960, -20.84, .216, 70.56))
R11.3<-R.3[1:3,1:3]
R12.3<-R.3[4:5,4:5]
View(R.3)
R.3<-cbind(c(1106.0, 396.7, 108.4, .787, 26.230),c(396.7, 2382.0, 1143.0, -.214, -23.96),c(108.4,1143.0,2136.0,2.189,-20.84) c(.787, -.214, 2.189, .016, .216), c(26.23, -23.960, -20.84, .216, 70.56) )
R.3<-cbind(c(1106.0, 396.7, 108.4, .787, 26.230), c(396.7, 2382.0, 1143.0, -.214, -23.96),c(108.4,1143.0,2136.0,2.189,-20.84), c(.787, -.214, 2.189, .016, .216), c(26.23, -23.960, -20.84, .216, 70.56) )
R11.3<-R.3[1:3,1:3]
R12.3<-R.3[4:5,4:5]
View(spearman.3)
set.seed(20200420) #created at date
# assigning number of excercises
(people_3quest <- sample(x = c("Roman","Pablo","Sof"),replace = F, size = 2)) #people with 3 questions, by alphabetic order
# assinging excersises
number_ex <- 1:10 #excercises
cat("\nEjercicios Roman: ")
(ex_luis <- sample(x = number_ex, replace = F, size = 4))
number_ex <- number_ex[! number_ex %in% ex_luis] #removing questions
cat("\nEjercicios Pablo: ")
(ex_roman <- sample(x = number_ex, replace = F, size = 3))
number_ex <- number_ex[! number_ex %in% ex_roman] #removing questions
cat("\nEjercicios Sof: ")
(ex_sof <- number_ex)
#Instalar las librerias necesarias y cargarlas
instalar <- function(paquete) {
if (!require(paquete,character.only = TRUE,
quietly = TRUE,
warn.conflicts = FALSE)){
install.packages(as.character(paquete),
dependecies = TRUE,
repos = "http://cran.us.r-project.org")
library(paquete,
character.only = TRUE,
quietly = TRUE,
warn.conflicts = FALSE)
}
}
libs <- c('ccaPP')
lapply(libs, instalar)
R.3<-cbind(c(1106.0, 396.7, 108.4, .787, 26.230), c(396.7, 2382.0, 1143.0, -.214, -23.96),c(108.4,1143.0,2136.0,2.189,-20.84), c(.787, -.214, 2.189, .016, .216), c(26.23, -23.960, -20.84, .216, 70.56) )
R11.3<-R.3[1:3,1:3]
R12.3<-R.3[4:5,4:5]
View(R.3)
R.3<-cbind(c(1106.0, 396.7, 108.4, .787, 26.230), c(396.7, 2382.0, 1143.0, -.214, -23.96),c(108.4,1143.0,2136.0,2.189,-20.84), c(.787, -.214, 2.189, .016, .216), c(26.23, -23.960, -20.84, .216, 70.56) )
R11.3<-R.3[4:5,4:5];R22.3<-R.3[1:3,1:3];R12.3<-R.3[4:5,1:3];R21<-R.3[1:3,4:5]
R.3<-cbind(c(1106.0, 396.7, 108.4, .787, 26.230), c(396.7, 2382.0, 1143.0, -.214, -23.96),c(108.4,1143.0,2136.0,2.189,-20.84), c(.787, -.214, 2.189, .016, .216), c(26.23, -23.960, -20.84, .216, 70.56) )
R11.3<-R.3[4:5,4:5];R22.3<-R.3[1:3,1:3];R12.3<-R.3[4:5,1:3];R21.3<-t(R12.3)
R.3<-cbind(c(1106.0, 396.7, 108.4, .787, 26.230), c(396.7, 2382.0, 1143.0, -.214, -23.96),c(108.4,1143.0,2136.0,2.189,-20.84), c(.787, -.214, 2.189, .016, .216), c(26.23, -23.960, -20.84, .216, 70.56) )
R11.3<-R.3[4:5,4:5];R22.3<-R.3[1:3,1:3];R12.3<-R.3[4:5,1:3];R21.3<-t(R12.3)
A.3 <- solve(R11.3) %*% R12.3 %*% solve(R22.3) %*% R21.3
sA.3 <- eigen(A.3);sA.3
R.3[4:5,1:5]
sqrt(0.26764579)
# Cálculo de la matriz B
B.3 <- solve(R22.3) %*% R21.3 %*% solve(R11.3) %*% R12.3
sB.3 <- eigen(B.3);sB.3
0.26764579/(0.26764579+0.01575231)
sestructura.3 <- as.matrix(W[,4:5]) %*% sA$vectors[,1]
#Instalar las librerias necesarias y cargarlas
instalar <- function(paquete) {
if (!require(paquete,character.only = TRUE,
quietly = TRUE,
warn.conflicts = FALSE)){
install.packages(as.character(paquete),
dependecies = TRUE,
repos = "http://cran.us.r-project.org")
library(paquete,
character.only = TRUE,
quietly = TRUE,
warn.conflicts = FALSE)
}
}
libs <- c('CANCORR')
lapply(libs, instalar)
#Instalar las librerias necesarias y cargarlas
instalar <- function(paquete) {
if (!require(paquete,character.only = TRUE,
quietly = TRUE,
warn.conflicts = FALSE)){
install.packages(as.character(paquete),
dependecies = TRUE,
repos = "http://cran.us.r-project.org")
library(paquete,
character.only = TRUE,
quietly = TRUE,
warn.conflicts = FALSE)
}
}
libs <- c('rrcov')
lapply(libs, instalar)
data(hemophilia)
View(hemophilia)
data.9<-read.table("hemofilia", header = F)
data.9<-read.table("hemofilia.txt", header = F)
View(data.9)
(mcd <- CovMcd(hemophilia[,1:2]))
col <- ifelse(hemophilia$gr == "carrier", 2, 3) ## define clours for the groups
plot(mcd, which="tolEllipsePlot", class=TRUE, col=col)
View(data.9)
data(hemophilia)
View(hemophilia)
View(data.9)
data.9<-data("hemophilia")
data("hemophilia")
set.seed(20200420) #created at date
# assigning number of excercises
(people_3quest <- sample(x = c("Roman","Pablo","Sof"),replace = F, size = 2)) #people with 3 questions, by alphabetic order
# assinging excersises
number_ex <- 1:10 #excercises
cat("\nEjercicios Roman: ")
(ex_luis <- sample(x = number_ex, replace = F, size = 4))
number_ex <- number_ex[! number_ex %in% ex_luis] #removing questions
cat("\nEjercicios Pablo: ")
(ex_roman <- sample(x = number_ex, replace = F, size = 3))
number_ex <- number_ex[! number_ex %in% ex_roman] #removing questions
cat("\nEjercicios Sof: ")
(ex_sof <- number_ex)
#Instalar las librerias necesarias y cargarlas
instalar <- function(paquete) {
if (!require(paquete,character.only = TRUE,
quietly = TRUE,
warn.conflicts = FALSE)){
install.packages(as.character(paquete),
dependecies = TRUE,
repos = "http://cran.us.r-project.org")
library(paquete,
character.only = TRUE,
quietly = TRUE,
warn.conflicts = FALSE)
}
}
libs <- c('rrcov')
lapply(libs, instalar)
R.3<-cbind(c(1106.0, 396.7, 108.4, .787, 26.230), c(396.7, 2382.0, 1143.0, -.214, -23.96),c(108.4,1143.0,2136.0,2.189,-20.84), c(.787, -.214, 2.189, .016, .216), c(26.23, -23.960, -20.84, .216, 70.56) )
R11.3<-R.3[4:5,4:5];R22.3<-R.3[1:3,1:3];R12.3<-R.3[4:5,1:3];R21.3<-t(R12.3)
A.3 <- solve(R11.3) %*% R12.3 %*% solve(R22.3) %*% R21.3
sA.3 <- eigen(A.3);sA.3
# Cálculo de la matriz B
B.3 <- solve(R22.3) %*% R21.3 %*% solve(R11.3) %*% R12.3
sB.3 <- eigen(B.3);sB.3
data("hemophilia")
(mcd <- CovMcd(hemophilia[,1:2]))
col <- ifelse(hemophilia$gr == "carrier", 2, 3) ## define clours for the groups
plot(mcd, which="tolEllipsePlot", class=TRUE, col=col)
data("hemophilia")
plot(hemophilia)
View(hemophilia)
data("hemophilia")
plot(hemophilia$AHFactivity)
data("hemophilia")
plot(hemophilia$AHFactivity)
plot(hemophilia$AHFantigen)
ad.test(hemophilia)
ad.test(hemophilia$AHFactivity)
#Instalar las librerias necesarias y cargarlas
instalar <- function(paquete) {
if (!require(paquete,character.only = TRUE,
quietly = TRUE,
warn.conflicts = FALSE)){
install.packages(as.character(paquete),
dependecies = TRUE,
repos = "http://cran.us.r-project.org")
library(paquete,
character.only = TRUE,
quietly = TRUE,
warn.conflicts = FALSE)
}
}
libs <- c('rrcov', 'nortest')
lapply(libs, instalar)
ad.test(hemophilia$AHFactivity)
ad.test(hemophilia$AHFantigen)
size.9 <- floor(0.75 * nrow(hemophilia))
train_ind.9 <- sample(nrow(hemophilia), size = size.9)
train_df.9 <- as.data.frame(hemophilia[train_ind.9, ])
test_d.9f <- as.data.frame(hemophilia[-train_ind.9, ])
